<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TechPath Professional - Developer Learning Platform</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-color: #2563eb;
            --primary-dark: #1d4ed8;
            --secondary-color: #64748b;
            --accent-color: #0ea5e9;
            --background: #f8fafc;
            --card-bg: #ffffff;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --text-muted: #94a3b8;
            --border-color: #e2e8f0;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1);
            --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1);
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: var(--background);
            color: var(--text-primary);
            line-height: 1.6;
            font-size: 14px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 40px 30px;
            margin-bottom: 32px;
            box-shadow: var(--shadow);
            border: 1px solid var(--border-color);
        }

        header h1 {
            font-size: 2.5rem;
            color: var(--text-primary);
            margin-bottom: 8px;
            font-weight: 700;
            letter-spacing: -0.025em;
        }

        header .subtitle {
            font-size: 1.1rem;
            color: var(--text-secondary);
            margin-bottom: 32px;
            font-weight: 500;
        }

        .search-filter {
            display: flex;
            gap: 16px;
            justify-content: center;
            align-items: center;
            flex-wrap: wrap;
            margin-bottom: 24px;
        }

        .search-box {
            padding: 12px 20px;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            background: var(--card-bg);
            font-size: 14px;
            min-width: 300px;
            outline: none;
            transition: all 0.2s ease;
            color: var(--text-primary);
        }

        .search-box:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgb(37 99 235 / 0.1);
        }

        .category-tabs {
            display: flex;
            justify-content: center;
            gap: 8px;
            flex-wrap: wrap;
            background: var(--card-bg);
            padding: 8px;
            border-radius: 10px;
            border: 1px solid var(--border-color);
        }

        .tab-btn {
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            background: transparent;
            color: var(--text-secondary);
            cursor: pointer;
            transition: all 0.2s ease;
            font-weight: 500;
            font-size: 14px;
        }

        .tab-btn.active,
        .tab-btn:hover {
            background: var(--primary-color);
            color: white;
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }

        .stat {
            text-align: center;
            background: var(--card-bg);
            padding: 24px;
            border-radius: 12px;
            border: 1px solid var(--border-color);
            box-shadow: var(--shadow-sm);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            display: block;
            color: var(--primary-color);
            margin-bottom: 4px;
        }

        .stat-label {
            font-size: 14px;
            color: var(--text-secondary);
            font-weight: 500;
        }

        .roadmap-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
            gap: 24px;
            margin-bottom: 40px;
        }

        .roadmap-card {
            background: var(--card-bg);
            border-radius: 12px;
            padding: 24px;
            box-shadow: var(--shadow);
            transition: all 0.2s ease;
            cursor: pointer;
            border: 1px solid var(--border-color);
            position: relative;
        }

        .roadmap-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
            border-color: var(--primary-color);
        }

        .roadmap-header {
            display: flex;
            align-items: flex-start;
            margin-bottom: 16px;
        }

        .roadmap-icon {
            width: 48px;
            height: 48px;
            background: var(--primary-color);
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 16px;
            color: white;
            font-size: 1.2rem;
            flex-shrink: 0;
        }

        .roadmap-info h3 {
            color: var(--text-primary);
            margin-bottom: 6px;
            font-size: 1.25rem;
            font-weight: 600;
            line-height: 1.3;
        }

        .difficulty {
            display: inline-block;
            padding: 2px 8px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.025em;
        }

        .difficulty.beginner {
            background: #dcfce7;
            color: #166534;
        }

        .difficulty.intermediate {
            background: #fef3c7;
            color: #92400e;
        }

        .difficulty.advanced {
            background: #fee2e2;
            color: #991b1b;
        }

        .roadmap-card p {
            color: var(--text-secondary);
            margin-bottom: 16px;
            font-size: 14px;
            line-height: 1.5;
        }

        .roadmap-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 16px;
            font-size: 12px;
            color: var(--text-muted);
            font-weight: 500;
        }

        .meta-item {
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .progress-bar {
            background: #f1f5f9;
            height: 6px;
            border-radius: 6px;
            overflow: hidden;
            margin-bottom: 8px;
        }

        .progress-fill {
            background: var(--primary-color);
            height: 100%;
            border-radius: 6px;
            transition: width 0.3s ease;
        }

        .progress-text {
            font-size: 12px;
            color: var(--text-muted);
            font-weight: 500;
        }

        .roadmap-detail {
            display: none;
            background: var(--card-bg);
            border-radius: 12px;
            padding: 32px;
            margin-top: 24px;
            box-shadow: var(--shadow);
            border: 1px solid var(--border-color);
        }

        .roadmap-detail.active {
            display: block;
        }

        .back-btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 10px 16px;
            border-radius: 8px;
            cursor: pointer;
            margin-bottom: 24px;
            transition: all 0.2s ease;
            font-weight: 500;
            font-size: 14px;
        }

        .back-btn:hover {
            background: var(--primary-dark);
            transform: translateY(-1px);
        }

        .detail-header h2 {
            font-size: 1.875rem;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 8px;
        }

        .detail-header p {
            color: var(--text-secondary);
            font-size: 16px;
            margin-bottom: 32px;
        }

        .step-container {
            display: grid;
            gap: 16px;
            margin-top: 24px;
        }

        .step {
            background: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 10px;
            padding: 20px;
            transition: all 0.2s ease;
            cursor: pointer;
        }

        .step:hover {
            border-color: var(--primary-color);
            box-shadow: var(--shadow);
        }

        .step.completed {
            background: #f0fdf4;
            border-color: var(--success);
        }

        .step.in-progress {
            background: #fffbeb;
            border-color: var(--warning);
        }

        .step-header {
            display: flex;
            align-items: center;
            margin-bottom: 12px;
        }

        .step-number {
            width: 32px;
            height: 32px;
            background: var(--secondary-color);
            color: white;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 16px;
            font-weight: 600;
            font-size: 13px;
            flex-shrink: 0;
        }

        .step.completed .step-number {
            background: var(--success);
        }

        .step.in-progress .step-number {
            background: var(--warning);
        }

        .step-title-area h4 {
            font-size: 1.1rem;
            color: var(--text-primary);
            margin-bottom: 4px;
            font-weight: 600;
        }

        .step-meta {
            display: flex;
            gap: 16px;
            align-items: center;
            font-size: 12px;
            color: var(--text-muted);
            font-weight: 500;
        }

        .step-meta span {
            display: flex;
            align-items: center;
            gap: 4px;
        }

        .step-description {
            color: var(--text-secondary);
            margin-bottom: 12px;
            font-size: 14px;
        }

        .expand-toggle {
            background: none;
            border: none;
            color: var(--primary-color);
            cursor: pointer;
            font-size: 13px;
            font-weight: 500;
            padding: 4px 0;
            transition: color 0.2s ease;
        }

        .expand-toggle:hover {
            color: var(--primary-dark);
        }

        .step-expanded {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.3s ease;
            margin-top: 12px;
        }

        .step-expanded.show {
            max-height: 600px;
        }

        .step-details {
            background: #f8fafc;
            border-radius: 8px;
            padding: 20px;
            border: 1px solid var(--border-color);
        }

        .step-objectives {
            margin-bottom: 20px;
        }

        .step-objectives h5 {
            color: var(--text-primary);
            margin-bottom: 12px;
            font-weight: 600;
            font-size: 14px;
        }

        .objectives-list {
            list-style: none;
            padding-left: 0;
        }

        .objectives-list li {
            padding: 6px 0;
            color: var(--text-secondary);
            position: relative;
            padding-left: 20px;
            font-size: 14px;
        }

        .objectives-list li::before {
            content: '•';
            position: absolute;
            left: 0;
            color: var(--primary-color);
            font-weight: bold;
        }

        .resources {
            margin-top: 16px;
        }

        .resources h5 {
            color: var(--text-primary);
            margin-bottom: 12px;
            font-weight: 600;
            font-size: 14px;
        }

        .resource-links {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }

        .resource-link {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 6px 12px;
            background: white;
            color: var(--primary-color);
            text-decoration: none;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            font-size: 13px;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .resource-link:hover {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
            transform: translateY(-1px);
            box-shadow: var(--shadow-sm);
        }

        .resource-link::before {
            content: '🔗';
            font-size: 11px;
        }

        .navbar {
            background: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 10px;
            padding: 16px 24px;
            margin-bottom: 24px;
            box-shadow: var(--shadow-sm);
        }

        .navbar-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 16px;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .logo-icon {
            width: 32px;
            height: 32px;
            background: var(--primary-color);
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
        }

        .logo-text {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--text-primary);
        }

        .nav-actions {
            display: flex;
            gap: 12px;
            align-items: center;
        }

        .btn {
            padding: 8px 16px;
            border-radius: 6px;
            border: 1px solid var(--border-color);
            background: white;
            color: var(--text-secondary);
            font-size: 13px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .btn:hover {
            border-color: var(--primary-color);
            color: var(--primary-color);
        }

        .btn-primary:hover {
            background: var(--primary-dark);
        }

        .roadmap-card.hidden {
            display: none;
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 16px;
            text-align: center;
        }

        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 40px 0;
        }

        .feature-card {
            background: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            box-shadow: var(--shadow-sm);
        }

        .feature-icon {
            width: 40px;
            height: 40px;
            background: var(--accent-color);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 12px;
            color: white;
            font-size: 1.1rem;
        }

        .feature-card h3 {
            font-size: 1rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 8px;
        }

        .feature-card p {
            font-size: 13px;
            color: var(--text-secondary);
            line-height: 1.4;
        }

        @@media (max-width: 768px) {
            .container {
                padding: 16px;
            }

            header {
                padding: 32px 24px;
            }

            header h1 {
                font-size: 2rem;
            }

            .roadmap-grid {
                grid-template-columns: 1fr;
            }

            .search-box {
                min-width: 250px;
            }

            .step {
                padding: 16px;
            }

            .step-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 8px;
            }

            .step-number {
                margin-right: 0;
                margin-bottom: 8px;
            }

            .navbar-content {
                justify-content: center;
            }

            .nav-actions {
                order: -1;
                width: 100%;
                justify-content: center;
            }
        }

        .completion-badge {
            position: absolute;
            top: 16px;
            right: 16px;
            background: var(--success);
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 11px;
            font-weight: 600;
        }

        .tooltip {
            position: relative;
            display: inline-block;
        }

        .tooltip .tooltiptext {
            visibility: hidden;
            width: 200px;
            background-color: var(--text-primary);
            color: white;
            text-align: center;
            border-radius: 6px;
            padding: 8px 12px;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -100px;
            font-size: 12px;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .tooltip:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="navbar">
            <div class="navbar-content">
                <div class="logo">
                    <div class="logo-icon">TP</div>
                    <div class="logo-text">TechPath Professional</div>
                </div>
                <div class="nav-actions">
                    <button class="btn">Export Progress</button>
                    <button class="btn btn-primary">Create Custom Path</button>
                </div>
            </div>
        </div>

        <header>
            <h1>Developer Learning Platform</h1>
            <p class="subtitle">Structured career roadmaps with curated resources for professional development</p>

            <div class="search-filter">
                <input type="text" class="search-box" placeholder="Search learning paths..." id="searchInput">
            </div>

            <div class="category-tabs">
                <button class="tab-btn active" data-category="all">All Paths</button>
                <button class="tab-btn" data-category="web">Web Development</button>
                <button class="tab-btn" data-category="mobile">Mobile</button>
                <button class="tab-btn" data-category="data">Data & AI</button>
                <button class="tab-btn" data-category="ops">DevOps & Cloud</button>
                <button class="tab-btn" data-category="specialized">Specialized</button>
            </div>
        </header>

        <div class="stats">
            <div class="stat">
                <span class="stat-number">25+</span>
                <span class="stat-label">Career Roadmaps</span>
            </div>
            <div class="stat">
                <span class="stat-number">500+</span>
                <span class="stat-label">Curated Resources</span>
            </div>
            <div class="stat">
                <span class="stat-number">100K+</span>
                <span class="stat-label">Active Learners</span>
            </div>
            <div class="stat">
                <span class="stat-number">95%</span>
                <span class="stat-label">Career Success Rate</span>
            </div>
        </div>

        <div class="feature-grid">
            <div class="feature-card">
                <div class="feature-icon">📊</div>
                <h3>Progress Tracking</h3>
                <p>Monitor your learning journey with detailed progress analytics and milestone tracking</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">🎯</div>
                <h3>Curated Resources</h3>
                <p>Access hand-picked tutorials, documentation, and courses from industry experts</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">⚡</div>
                <h3>Skill Assessment</h3>
                <p>Evaluate your current abilities and get personalized learning recommendations</p>
            </div>
            <div class="feature-card">
                <div class="feature-icon">👥</div>
                <h3>Community Driven</h3>
                <p>Learn from experienced developers and contribute to the knowledge base</p>
            </div>
        </div>

        <h2 class="section-title">Choose Your Learning Path</h2>

        <div id="roadmap-overview">
            <div class="roadmap-grid" id="roadmapGrid">
                <!-- Roadmap cards will be populated by JavaScript -->
            </div>
        </div>

        <div id="roadmap-detail" class="roadmap-detail">
            <button class="back-btn" onclick="showOverview()">← Back to Roadmaps</button>
            <div class="detail-header">
                <h2 id="detail-title"></h2>
                <p id="detail-description"></p>
            </div>
            <div id="steps-container" class="step-container"></div>
        </div>
    </div>

    <script>
        const roadmaps = {
            frontend: {
                title: "Frontend Developer",
                description: "Master modern user interface development with HTML, CSS, JavaScript, and popular frameworks",
                category: "web",
                difficulty: "beginner",
                duration: "6-8 months",
                steps: [
                    {
                        title: "HTML & CSS Fundamentals",
                        description: "Build semantic, accessible web pages with modern CSS techniques",
                        duration: "3-4 weeks",
                        difficulty: "Beginner",
                        objectives: [
                            "Write semantic HTML5 markup",
                            "Master CSS selectors, properties, and box model",
                            "Implement responsive design with Grid and Flexbox",
                            "Understand web accessibility principles"
                        ],
                        resources: [
                            { name: "MDN Web Docs", url: "https://developer.mozilla.org/" },
                            { name: "CSS Grid Garden", url: "https://cssgridgarden.com/" },
                            { name: "A11Y Project", url: "https://www.a11yproject.com/" },
                            { name: "Can I Use", url: "https://caniuse.com/" }
                        ]
                    },
                    {
                        title: "JavaScript Programming",
                        description: "Learn modern JavaScript for interactive web development",
                        duration: "6-8 weeks",
                        difficulty: "Beginner",
                        objectives: [
                            "Master variables, functions, and control structures",
                            "Understand DOM manipulation and event handling",
                            "Work with asynchronous JavaScript (Promises, async/await)",
                            "Apply ES6+ features and module systems"
                        ],
                        resources: [
                            { name: "JavaScript.info", url: "https://javascript.info/" },
                            { name: "MDN JavaScript Guide", url: "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide" },
                            { name: "Eloquent JavaScript", url: "https://eloquentjavascript.net/" },
                            { name: "You Don't Know JS", url: "https://github.com/getify/You-Dont-Know-JS" }
                        ]
                    },
                    {
                        title: "Version Control with Git",
                        description: "Essential collaboration tool for professional development",
                        duration: "2 weeks",
                        difficulty: "Beginner",
                        objectives: [
                            "Execute basic Git commands and workflows",
                            "Manage branches and resolve merge conflicts",
                            "Collaborate effectively using GitHub",
                            "Implement proper commit message conventions"
                        ],
                        resources: [
                            { name: "Atlassian Git Tutorials", url: "https://www.atlassian.com/git/tutorials" },
                            { name: "GitHub Skills", url: "https://skills.github.com/" },
                            { name: "Pro Git Book", url: "https://git-scm.com/book" }
                        ]
                    },
                    {
                        title: "CSS Frameworks & Preprocessors",
                        description: "Accelerate styling with frameworks and build tools",
                        duration: "3-4 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Implement utility-first CSS with Tailwind",
                            "Build responsive components with Bootstrap",
                            "Use Sass/SCSS for organized stylesheets",
                            "Understand CSS-in-JS methodologies"
                        ],
                        resources: [
                            { name: "Tailwind CSS", url: "https://tailwindcss.com/docs" },
                            { name: "Sass Documentation", url: "https://sass-lang.com/documentation" },
                            { name: "Bootstrap Documentation", url: "https://getbootstrap.com/docs/" }
                        ]
                    },
                    {
                        title: "Frontend Framework (React)",
                        description: "Build complex applications with component-based architecture",
                        duration: "8-10 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Create reusable React components",
                            "Manage application state with hooks",
                            "Handle forms and user input validation",
                            "Implement routing for single-page applications"
                        ],
                        resources: [
                            { name: "React Documentation", url: "https://react.dev/" },
                            { name: "React TypeScript Cheatsheet", url: "https://react-typescript-cheatsheet.netlify.app/" },
                            { name: "React Patterns", url: "https://reactpatterns.com/" }
                        ]
                    }
                ]
            },
            backend: {
                title: "Backend Developer",
                description: "Develop server-side applications, APIs, and database systems",
                category: "web",
                difficulty: "intermediate",
                duration: "8-12 months",
                steps: [
                    {
                        title: "Server Programming Language",
                        description: "Master a backend language for server-side development",
                        duration: "8-10 weeks",
                        difficulty: "Beginner",
                        objectives: [
                            "Understand language syntax and paradigms",
                            "Implement error handling and logging",
                            "Work with package managers and dependencies",
                            "Apply testing frameworks and methodologies"
                        ],
                        resources: [
                            { name: "Python Official Tutorial", url: "https://docs.python.org/3/tutorial/" },
                            { name: "Node.js Documentation", url: "https://nodejs.org/en/docs/" },
                            { name: "Java Oracle Tutorials", url: "https://docs.oracle.com/javase/tutorial/" },
                            { name: "Go by Example", url: "https://gobyexample.com/" }
                        ]
                    },
                    {
                        title: "Database Design & Management",
                        description: "Design and optimize relational and NoSQL databases",
                        duration: "6-8 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Design normalized database schemas",
                            "Write efficient SQL queries and joins",
                            "Implement database indexing strategies",
                            "Understand ACID properties and transactions"
                        ],
                        resources: [
                            { name: "PostgreSQL Documentation", url: "https://www.postgresql.org/docs/" },
                            { name: "MongoDB University", url: "https://university.mongodb.com/" },
                            { name: "Database Design Course", url: "https://www.coursera.org/learn/database-design" }
                        ]
                    },
                    {
                        title: "API Development & Integration",
                        description: "Build and consume RESTful APIs and GraphQL services",
                        duration: "6-8 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Design RESTful API endpoints",
                            "Implement authentication and authorization",
                            "Create comprehensive API documentation",
                            "Handle rate limiting and caching strategies"
                        ],
                        resources: [
                            { name: "REST API Design Guide", url: "https://restfulapi.net/" },
                            { name: "GraphQL Documentation", url: "https://graphql.org/learn/" },
                            { name: "Postman Learning Center", url: "https://learning.postman.com/" }
                        ]
                    }
                ]
            },
            devops: {
                title: "DevOps Engineer",
                description: "Implement CI/CD pipelines, containerization, and cloud infrastructure automation",
                category: "ops",
                difficulty: "intermediate",
                duration: "10-14 months",
                steps: [
                    {
                        title: "Linux System Administration",
                        description: "Master server management and command-line operations",
                        duration: "6-8 weeks",
                        difficulty: "Beginner",
                        objectives: [
                            "Navigate and manage Linux file systems",
                            "Configure system services and networking",
                            "Implement security best practices",
                            "Automate tasks with shell scripting"
                        ],
                        resources: [
                            { name: "Linux Command Line", url: "http://linuxcommand.org/" },
                            { name: "RHEL System Admin Guide", url: "https://access.redhat.com/documentation/" },
                            { name: "Linux Academy", url: "https://acloudguru.com/" }
                        ]
                    },
                    {
                        title: "Containerization with Docker",
                        description: "Package and deploy applications using container technology",
                        duration: "4-6 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Create optimized Docker images",
                            "Implement multi-stage builds",
                            "Manage container networks and volumes",
                            "Use Docker Compose for multi-service applications"
                        ],
                        resources: [
                            { name: "Docker Documentation", url: "https://docs.docker.com/" },
                            { name: "Docker Best Practices", url: "https://docs.docker.com/develop/best-practices/" },
                            { name: "Play with Docker", url: "https://labs.play-with-docker.com/" }
                        ]
                    }
                ]
            },
            datascience: {
                title: "Data Scientist",
                description: "Extract insights from data using statistical analysis and machine learning",
                category: "data",
                difficulty: "intermediate",
                duration: "12-16 months",
                steps: [
                    {
                        title: "Statistics & Probability",
                        description: "Build mathematical foundation for data analysis",
                        duration: "8-10 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Apply descriptive and inferential statistics",
                            "Understand probability distributions and sampling",
                            "Conduct hypothesis testing and A/B experiments",
                            "Interpret correlation vs causation"
                        ],
                        resources: [
                            { name: "Khan Academy Statistics", url: "https://www.khanacademy.org/math/statistics-probability" },
                            { name: "Think Stats 2e", url: "https://greenteapress.com/wp/think-stats-2e/" },
                            { name: "Statistical Thinking", url: "https://www.coursera.org/specializations/statistical-thinking" }
                        ]
                    },
                    {
                        title: "Python for Data Analysis",
                        description: "Use Python libraries for data manipulation and analysis",
                        duration: "6-8 weeks",
                        difficulty: "Beginner",
                        objectives: [
                            "Master Pandas for data manipulation",
                            "Create visualizations with Matplotlib and Seaborn",
                            "Perform statistical analysis with SciPy",
                            "Handle data cleaning and preprocessing"
                        ],
                        resources: [
                            { name: "Python Data Science Handbook", url: "https://jakevdp.github.io/PythonDataScienceHandbook/" },
                            { name: "Pandas Documentation", url: "https://pandas.pydata.org/docs/" },
                            { name: "Kaggle Learn Python", url: "https://www.kaggle.com/learn/python" }
                        ]
                    }
                ]
            },
            mobile: {
                title: "Mobile App Developer",
                description: "Create native and cross-platform mobile applications for iOS and Android",
                category: "mobile",
                difficulty: "intermediate",
                duration: "10-12 months",
                steps: [
                    {
                        title: "Mobile Development Fundamentals",
                        description: "Learn mobile app architecture and platform guidelines",
                        duration: "4-6 weeks",
                        difficulty: "Beginner",
                        objectives: [
                            "Understand mobile app lifecycle management",
                            "Apply platform-specific design patterns",
                            "Implement navigation and routing",
                            "Handle device permissions and security"
                        ],
                        resources: [
                            { name: "React Native Docs", url: "https://reactnative.dev/docs/getting-started" },
                            { name: "Flutter Documentation", url: "https://docs.flutter.dev/" },
                            { name: "iOS Human Interface Guidelines", url: "https://developer.apple.com/design/human-interface-guidelines/" },
                            { name: "Material Design", url: "https://material.io/design" }
                        ]
                    }
                ]
            },
            cybersecurity: {
                title: "Cybersecurity Specialist",
                description: "Protect organizational assets from cyber threats and vulnerabilities",
                category: "specialized",
                difficulty: "advanced",
                duration: "12-18 months",
                steps: [
                    {
                        title: "Network Security Fundamentals",
                        description: "Understand network protocols, threats, and defense mechanisms",
                        duration: "8-10 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Analyze network traffic and protocols",
                            "Configure firewalls and intrusion detection",
                            "Conduct vulnerability assessments",
                            "Implement network segmentation strategies"
                        ],
                        resources: [
                            { name: "NIST Cybersecurity Framework", url: "https://www.nist.gov/cyberframework" },
                            { name: "OWASP Foundation", url: "https://owasp.org/" },
                            { name: "SANS Institute", url: "https://www.sans.org/cyber-security-courses/" }
                        ]
                    }
                ]
            },
            cloud: {
                title: "Cloud Solutions Architect",
                description: "Design and implement scalable, secure cloud infrastructure solutions",
                category: "ops",
                difficulty: "advanced",
                duration: "12-16 months",
                steps: [
                    {
                        title: "Cloud Computing Fundamentals",
                        description: "Master cloud service models and deployment strategies",
                        duration: "6-8 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Compare IaaS, PaaS, and SaaS models",
                            "Design for scalability and high availability",
                            "Implement cost optimization strategies",
                            "Understand compliance and governance frameworks"
                        ],
                        resources: [
                            { name: "AWS Well-Architected", url: "https://aws.amazon.com/architecture/well-architected/" },
                            { name: "Azure Architecture Center", url: "https://docs.microsoft.com/en-us/azure/architecture/" },
                            { name: "Google Cloud Architecture", url: "https://cloud.google.com/architecture" }
                        ]
                    }
                ]
            },
            ai: {
                title: "AI/ML Engineer",
                description: "Develop and deploy machine learning models and AI systems at scale",
                category: "data",
                difficulty: "advanced",
                duration: "14-18 months",
                steps: [
                    {
                        title: "Machine Learning Foundations",
                        description: "Master core ML algorithms and mathematical concepts",
                        duration: "10-12 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Implement supervised and unsupervised learning algorithms",
                            "Understand bias-variance tradeoff and regularization",
                            "Apply feature engineering and selection techniques",
                            "Evaluate model performance with proper metrics"
                        ],
                        resources: [
                            { name: "Hands-On ML Book", url: "https://www.oreilly.com/library/view/hands-on-machine-learning/9781492032632/" },
                            { name: "Scikit-learn Documentation", url: "https://scikit-learn.org/stable/" },
                            { name: "Coursera ML Specialization", url: "https://www.coursera.org/specializations/machine-learning-introduction" }
                        ]
                    }
                ]
            },
            ux: {
                title: "UX/UI Designer",
                description: "Create intuitive, user-centered digital experiences through research and design",
                category: "specialized",
                difficulty: "beginner",
                duration: "8-10 months",
                steps: [
                    {
                        title: "User Research Methods",
                        description: "Learn systematic approaches to understand user needs and behaviors",
                        duration: "4-6 weeks",
                        difficulty: "Beginner",
                        objectives: [
                            "Conduct user interviews and surveys",
                            "Perform usability testing and analysis",
                            "Create user personas and journey maps",
                            "Apply quantitative and qualitative research methods"
                        ],
                        resources: [
                            { name: "Nielsen Norman Group", url: "https://www.nngroup.com/" },
                            { name: "Google UX Design Course", url: "https://www.coursera.org/professional-certificates/google-ux-design" },
                            { name: "UX Research Methods", url: "https://www.userinterviews.com/ux-research-field-guide" }
                        ]
                    }
                ]
            },
            product: {
                title: "Product Manager",
                description: "Drive product strategy, roadmap planning, and cross-functional team coordination",
                category: "specialized",
                difficulty: "intermediate",
                duration: "8-12 months",
                steps: [
                    {
                        title: "Product Strategy & Planning",
                        description: "Develop product vision, strategy, and roadmap planning skills",
                        duration: "6-8 weeks",
                        difficulty: "Intermediate",
                        objectives: [
                            "Conduct market research and competitive analysis",
                            "Define product vision and success metrics",
                            "Create and maintain product roadmaps",
                            "Prioritize features using frameworks like RICE"
                        ],
                        resources: [
                            { name: "Product Management Guide", url: "https://www.productplan.com/learn/" },
                            { name: "Mind the Product", url: "https://www.mindtheproduct.com/" },
                            { name: "Lenny's Newsletter", url: "https://www.lennysnewsletter.com/" }
                        ]
                    }
                ]
            }
        };

        let currentProgress = {};
        let currentCategory = 'all';

        // Initialize progress tracking
        Object.keys(roadmaps).forEach(key => {
            currentProgress[key] = new Array(roadmaps[key].steps.length).fill('pending');
        });

        function createRoadmapCards() {
            const grid = document.getElementById('roadmapGrid');
            grid.innerHTML = '';

            Object.keys(roadmaps).forEach(key => {
                const roadmap = roadmaps[key];
                const card = document.createElement('div');
                card.className = 'roadmap-card';
                card.dataset.roadmap = key;
                card.dataset.category = roadmap.category;

                const iconMap = {
                    frontend: '🎨', backend: '⚙️', devops: '🚀',
                    mobile: '📱', datascience: '📊', cybersecurity: '🛡️',
                    cloud: '☁️', ux: '✨', ai: '🧠', product: '📈'
                };

                // Calculate completion percentage
                const completed = currentProgress[key].filter(status => status === 'completed').length;
                const total = roadmap.steps.length;
                const percentage = Math.round((completed / total) * 100);

                card.innerHTML = `
                    <div class="roadmap-header">
                        <div class="roadmap-icon">${iconMap[key] || '💻'}</div>
                        <div class="roadmap-info">
                            <h3>${roadmap.title}</h3>
                            <span class="difficulty ${roadmap.difficulty}">${roadmap.difficulty}</span>
                        </div>
                    </div>
                    ${percentage === 100 ? '<div class="completion-badge">Completed</div>' : ''}
                    <p>${roadmap.description}</p>
                    <div class="roadmap-meta">
                        <span class="meta-item">⏱️ ${roadmap.duration}</span>
                        <span class="meta-item">📚 ${roadmap.steps.length} modules</span>
                    </div>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: ${percentage}%"></div>
                    </div>
                    <div class="progress-text">${percentage}% Complete</div>
                `;

                card.addEventListener('click', () => showRoadmapDetail(key));
                grid.appendChild(card);
            });
        }

        function updateAllProgress() {
            Object.keys(roadmaps).forEach(roadmapKey => {
                const completed = currentProgress[roadmapKey].filter(status => status === 'completed').length;
                const total = roadmaps[roadmapKey].steps.length;
                const percentage = Math.round((completed / total) * 100);

                const card = document.querySelector(`[data-roadmap="${roadmapKey}"]`);
                if (card) {
                    const progressFill = card.querySelector('.progress-fill');
                    const progressText = card.querySelector('.progress-text');

                    progressFill.style.width = percentage + '%';
                    progressText.textContent = `${percentage}% Complete`;

                    // Update completion badge
                    const existingBadge = card.querySelector('.completion-badge');
                    if (percentage === 100 && !existingBadge) {
                        const badge = document.createElement('div');
                        badge.className = 'completion-badge';
                        badge.textContent = 'Completed';
                        card.appendChild(badge);
                    } else if (percentage < 100 && existingBadge) {
                        existingBadge.remove();
                    }
                }
            });
        }

        function showRoadmapDetail(roadmapKey) {
            const roadmap = roadmaps[roadmapKey];
            const detailSection = document.getElementById('roadmap-detail');
            const overviewSection = document.getElementById('roadmap-overview');

            document.getElementById('detail-title').textContent = roadmap.title;
            document.getElementById('detail-description').textContent = roadmap.description + ` • ${roadmap.duration} • ${roadmap.difficulty.charAt(0).toUpperCase() + roadmap.difficulty.slice(1)} Level`;

            const stepsContainer = document.getElementById('steps-container');
            stepsContainer.innerHTML = '';

            roadmap.steps.forEach((step, index) => {
                const stepElement = document.createElement('div');
                stepElement.className = `step ${currentProgress[roadmapKey][index]}`;
                stepElement.innerHTML = `
                    <div class="step-header">
                        <div class="step-number">${index + 1}</div>
                        <div class="step-title-area">
                            <h4>${step.title}</h4>
                            <div class="step-meta">
                                <span>⏱️ ${step.duration}</span>
                                <span>📊 ${step.difficulty}</span>
                                <span>🎯 ${step.objectives.length} objectives</span>
                            </div>
                        </div>
                    </div>
                    <div class="step-description">${step.description}</div>
                    <button class="expand-toggle" onclick="toggleStepDetails(this)">View Details ↓</button>
                    <div class="step-expanded">
                        <div class="step-details">
                            <div class="step-objectives">
                                <h5>Learning Objectives</h5>
                                <ul class="objectives-list">
                                    ${step.objectives.map(obj => `<li>${obj}</li>`).join('')}
                                </ul>
                            </div>
                            <div class="resources">
                                <h5>Recommended Resources</h5>
                                <div class="resource-links">
                                    ${step.resources.map(resource =>
                                        `<a href="${resource.url}" target="_blank" class="resource-link">${resource.name}</a>`
                                    ).join('')}
                                </div>
                            </div>
                        </div>
                    </div>
                `;

                stepElement.addEventListener('click', (e) => {
                    if (e.target.classList.contains('expand-toggle')) return;
                    if (e.target.tagName === 'A') return;

                    const currentStatus = currentProgress[roadmapKey][index];
                    let newStatus;

                    if (currentStatus === 'pending') {
                        newStatus = 'in-progress';
                    } else if (currentStatus === 'in-progress') {
                        newStatus = 'completed';
                    } else {
                        newStatus = 'pending';
                    }

                    currentProgress[roadmapKey][index] = newStatus;
                    stepElement.className = `step ${newStatus}`;
                    updateAllProgress();
                });

                stepsContainer.appendChild(stepElement);
            });

            overviewSection.style.display = 'none';
            detailSection.classList.add('active');
        }

        function toggleStepDetails(button) {
            const expanded = button.nextElementSibling;
            const isShowing = expanded.classList.contains('show');

            if (isShowing) {
                expanded.classList.remove('show');
                button.textContent = 'View Details ↓';
            } else {
                expanded.classList.add('show');
                button.textContent = 'Hide Details ↑';
            }
        }

        function showOverview() {
            document.getElementById('roadmap-overview').style.display = 'block';
            document.getElementById('roadmap-detail').classList.remove('active');
        }

        function filterByCategory(category) {
            currentCategory = category;
            const cards = document.querySelectorAll('.roadmap-card');

            cards.forEach(card => {
                if (category === 'all' || card.dataset.category === category) {
                    card.classList.remove('hidden');
                } else {
                    card.classList.add('hidden');
                }
            });

            // Update active tab
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            document.querySelector(`[data-category="${category}"]`).classList.add('active');
        }

        function searchRoadmaps() {
            const query = document.getElementById('searchInput').value.toLowerCase();
            const cards = document.querySelectorAll('.roadmap-card');

            cards.forEach(card => {
                const title = card.querySelector('h3').textContent.toLowerCase();
                const description = card.querySelector('p').textContent.toLowerCase();
                const category = card.dataset.category;

                const matchesSearch = title.includes(query) || description.includes(query);
                const matchesCategory = currentCategory === 'all' || category === currentCategory;

                if (matchesSearch && matchesCategory) {
                    card.classList.remove('hidden');
                } else {
                    card.classList.add('hidden');
                }
            });
        }

        // Event listeners
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                filterByCategory(btn.dataset.category);
            });
        });

        document.getElementById('searchInput').addEventListener('input', searchRoadmaps);

        // Initialize the app
        createRoadmapCards();

        // Demo progress
        setTimeout(() => {
            currentProgress.frontend[0] = 'completed';
            currentProgress.frontend[1] = 'in-progress';
            currentProgress.backend[0] = 'completed';
            currentProgress.datascience[0] = 'in-progress';
            updateAllProgress();
        }, 1000);
    </script>
</body>
</html>